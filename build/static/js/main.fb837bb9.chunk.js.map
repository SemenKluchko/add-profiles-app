{"version":3,"sources":["components/Header/Header.jsx","components/Card/Card.jsx","components/Form/Form.jsx","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","className","this","props","title","React","Component","Card","profile","src","avatar_url","alt","name","location","followers","onClick","addNewProfile","Form","state","userName","handleSubmit","event","a","preventDefault","fetch","respUser","json","gitHubUser","onSubmitUser","setState","onSubmit","type","value","onChange","target","placeholder","required","CardList","profiles","map","key","id","App","profileData","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAWeA,E,4JAPX,WACI,OACI,qBAAKC,UAAU,SAAf,SAAyBC,KAAKC,MAAMC,Y,GAH3BC,IAAMC,WCoBZC,G,kKAlBX,WACI,IAAMC,EAAUN,KAAKC,MACrB,OACI,sBAAKF,UAAU,iBAAf,UACI,qBAAKQ,IAAKD,EAAQE,WAAYC,IAAI,KAClC,sBAAKV,UAAU,OAAf,UACI,qBAAKA,UAAU,OAAf,SAAuBO,EAAQI,OAC/B,qBAAKX,UAAU,UAAf,SAA0BO,EAAQK,WAClC,sBAAKZ,UAAU,YAAf,wBAAuCO,EAAQM,aAC/C,wBAAQC,QAASb,KAAKC,MAAMa,cAA5B,SACQ,qBAAKf,UAAU,OAAf,wC,GAXTI,IAAMC,Y,wBCyBVW,G,kNAzBXC,MAAQ,CAAEC,SAAU,I,EACpBC,a,uCAAe,WAAOC,GAAP,iBAAAC,EAAA,6DACXD,EAAME,iBADK,SAEUC,MAAM,gCAAD,OAAiC,EAAKN,MAAMC,WAF3D,cAEPM,EAFO,gBAGYA,EAASC,OAHrB,OAGPC,EAHO,OAIX,EAAKxB,MAAMyB,aAAaD,GACxB,EAAKE,SAAS,CAAEV,SAAU,KALf,2C,kGAQf,WAAU,IAAD,OACL,OACI,uBAAOW,SAAU5B,KAAKkB,aAAtB,UACI,uBACIW,KAAK,OACLC,MAAO9B,KAAKgB,MAAMC,SAClBc,SAAU,SAAAZ,GAAK,OAAI,EAAKQ,SAAS,CAAEV,SAAUE,EAAMa,OAAOF,SAC1DG,YAAY,kBACZC,UAAQ,IAEZ,qD,GApBG/B,IAAMC,YCKnB+B,G,MAAW,SAAClC,GAChB,OACI,8BACGA,EAAMmC,SAASC,KAAI,SAAC/B,GAAD,OAAa,wBAAC,EAAD,2BAAUA,GAAV,IAAmBgC,IAAKhC,EAAQiC,aA2B1DC,E,4MArBbxB,MAAQ,CACNoB,SAAU,I,EAEZtB,cAAgB,SAAC2B,GACf,EAAKd,UAAS,SAAAe,GAAS,MAAK,CAC1BN,SAAS,GAAD,mBAAMM,EAAUN,UAAhB,CAA0BK,S,4CAKtC,WACE,OACA,sBAAK1C,UAAU,OAAf,UACE,cAAC,EAAD,CAAQG,MAAM,yBACd,cAAC,EAAD,CAAMwB,aAAc1B,KAAKc,gBACzB,cAAC,EAAD,CAAUsB,SAAUpC,KAAKgB,MAAMoB,kB,GAhBnBjC,IAAMC,WCJTuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.fb837bb9.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nclass Header extends React.Component {\n    render () {\n        return (\n            <div className=\"header\">{this.props.title}</div>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport './Card.css';\n\n\nclass Card extends React.Component {\n    render () {\n        const profile = this.props; // here we use testData elements like a props, and give them to profile variable\n        return (\n            <div className='github-profile'>\n                <img src={profile.avatar_url} alt=\"\"/>\n                <div className=\"info\">\n                    <div className=\"name\">{profile.name}</div>\n                    <div className=\"company\">{profile.location}</div>\n                    <div className=\"followers\">Followers: {profile.followers}</div>\n                    <button onClick={this.props.addNewProfile}>\n                            <div className=\"name\">Show followers</div>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n","import React from 'react';\nimport './Form.css';\n\nclass Form extends React.Component {\n    state = { userName: ''};\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        let respUser = await fetch(`https://api.github.com/users/${this.state.userName}`);\n        let gitHubUser = await respUser.json();\n        this.props.onSubmitUser(gitHubUser);\n        this.setState({ userName: '' });\n        \n    };\n    render() {\n        return(\n            <form  onSubmit={this.handleSubmit}>\n                <input \n                    type=\"text\" \n                    value={this.state.userName}\n                    onChange={event => this.setState({ userName: event.target.value })}\n                    placeholder=\"Github username\" \n                    required\n                />\n                <button>Add card</button>\n            </form>\n        );\n    }\n}\n\nexport default Form;\n","import React from 'react';\nimport Header from '../Header/Header';\nimport Card from '../Card/Card';\nimport Form from '../Form/Form';\nimport './App.css';\n\n// Here below we have a function component, instead class.\n// I'm using that because just for mix class and func component in one file, and React ok with that;\nconst CardList = (props) => {\n  return (\n      <div>\n        {props.profiles.map((profile) => <Card {...profile} key={profile.id}/>)} \n      </div>\n  );\n}\n\nclass App extends React.Component {\n  state = {\n    profiles: [],\n  }\n  addNewProfile = (profileData) => {\n    this.setState(prevState => ({\n      profiles: [...prevState.profiles, profileData]\n\n    }))\n  }\n  \n  render() {\n    return (\n    <div className=\"main\">\n      <Header title=\"The GitHub Cards App\"/>\n      <Form onSubmitUser={this.addNewProfile}/>\n      <CardList profiles={this.state.profiles}/>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}